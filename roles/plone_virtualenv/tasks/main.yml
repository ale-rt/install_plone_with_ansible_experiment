---
- name: Ensure the folder plone_install_dir exists
  ansible.builtin.file:
    path: "{{ plone_install_dir }}"
    state: directory
    mode: "0700"

- name: Write a requirements.txt file
  ansible.builtin.lineinfile:
    dest: "{{ plone_install_dir }}/requirements.txt"
    line: "{{ item }}"
    create: true
    mode: "0600"
  loop:
    - Plone
    - ZEO
    - supervisor
    - plone.recipe.zope2instance

- name: Add extra packages
  ansible.builtin.lineinfile:
    dest: "{{ plone_install_dir }}/requirements.txt"
    line: "{{ item }}"
  loop: "{{ plone_extra_packages }}"

- name: Checkout packages for local development
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ plone_install_dir }}/src/{{ item.name }}"
    version: "{{ item.version }}"
  loop: "{{ plone_source_checkouts }}"

- name: Add source checkouts
  ansible.builtin.lineinfile:
    dest: "{{ plone_install_dir }}/requirements.txt"
    line: -e {{ plone_install_dir }}/src/{{ item.name }}
  loop: "{{ plone_source_checkouts }}"

- name: Check if we have a constraints.txt file
  ansible.builtin.stat:
    path: "{{ plone_install_dir }}/constraints.txt"
  register: constraints_file

- name: Fetch the constraints.txt file
  ansible.builtin.get_url:
    url: https://dist.plone.org/release/{{ plone_version }}/constraints.txt
    dest: "{{ plone_install_dir }}/constraints.txt"
    mode: "0600"
  when: not constraints_file.stat.exists

- name: Be sure we do not have checked out packages in the constraints.txt file
  ansible.builtin.lineinfile:
    dest: "{{ plone_install_dir }}/constraints.txt"
    regexp: ^{{ item.name }}==
    state: absent
  loop: "{{ plone_source_checkouts }}"

- name: Install a virtualenv with uv
  ansible.builtin.pip:
    name: uv
    virtualenv: "{{ plone_install_dir }}/.venv"
    virtualenv_python: "{{ plone_python }}"

- name: Install requirements.txt using uv
  ansible.builtin.command:
    cmd: "{{ plone_install_dir }}/.venv/bin/uv pip install -c {{ plone_install_dir }}/constraints.txt -r {{ plone_install_dir }}/requirements.txt"
    chdir: "{{ plone_install_dir }}"
  changed_when: true

- name: Create the bin directory
  ansible.builtin.file:
    path: "{{ plone_install_dir }}/bin"
    state: directory
    mode: "0700"

- name: Create the supervisord folder
  ansible.builtin.file:
    path: "{{ plone_install_dir }}/etc/supervisord.d"
    state: directory
    mode: "0700"

- name: Symlink supervisorctl and supervisord in the bin file
  ansible.builtin.file:
    src: "{{ plone_install_dir }}/.venv/bin/{{ item }}"
    dest: "{{ plone_install_dir }}/bin/{{ item }}"
    state: link
  loop:
    - supervisorctl
    - supervisord

- name: Create the supervisor configuration file
  ansible.builtin.template:
    src: etc/supervisord.conf.j2
    dest: "{{ plone_install_dir }}/etc/supervisord.conf"
    mode: "0600"
