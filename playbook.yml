---
- name: 'Install Plone with ansible'
  hosts:
    - localhost
  vars:
    plone_install_dir: '{{ ansible_facts.env.PWD }}'
    plone_version: 6.0.11.1
    plone_python: python3.11
    plone_base_port: 8080
    plone_workers: 2
    zeo_address: '{{ plone_install_dir }}/var/zeo/zeo.sock'
  tasks:
    - name: 'Check if we have custom defined variables'
      ansible.builtin.include_vars:
        dir: etc/ansible
      tags:
        - always

    - name: 'Write a requirements.txt file'
      ansible.builtin.lineinfile:
        dest: 'requirements.txt'
        line: '{{ item }}'
        create: true
        mode: '0600'
      loop:
        - 'Plone'
        - 'ZEO'
        - 'supervisor'
        - 'plone.recipe.zope2instance'

    - name: 'Add extra packages'
      ansible.builtin.lineinfile:
        dest: 'requirements.txt'
        line: '{{ item }}'
      loop: '{{ plone_extra_packages | default([]) }}'

    - name: 'Checkout packages for local development'
      ansible.builtin.git:
        repo: '{{ item.repo }}'
        dest: 'src/{{ item.name }}'
        version: '{{ item.version }}'
      loop: '{{ plone_source_checkouts | default([]) }}'

    - name: 'Add source checkouts'
      ansible.builtin.lineinfile:
        dest: 'requirements.txt'
        line: '-e src/{{ item.name }}'
      loop: '{{ plone_source_checkouts | default([]) }}'

    - name: 'Check if we have a constraints.txt file'
      ansible.builtin.stat:
        path: '{{ plone_install_dir }}/constraints.txt'
      register: constraints_file

    - name: 'Fetch the constraints.txt file'
      ansible.builtin.get_url:
        url: 'https://dist.plone.org/release/{{ plone_version }}/constraints.txt'
        dest: '{{ plone_install_dir }}/constraints.txt'
        mode: '0600'
      when: not constraints_file.stat.exists

    - name: 'Be sure we do not have checked out packages in the constraints.txt file'
      ansible.builtin.lineinfile:
        dest: '{{ plone_install_dir }}/constraints.txt'
        regexp: '^{{ item.name }}=='
        state: absent
      loop: '{{ plone_source_checkouts | default([]) }}'

    - name: 'Install Plone'
      community.general.make:
        chdir: '{{ plone_install_dir }}'
        target: 'var/plone-installed'

    - name: 'Create the zeo directory structure'
      ansible.builtin.file:
        path: '{{ item }}'
        state: directory
        mode: '0700'
      loop:
        - '{{ plone_install_dir }}/bin'
        - '{{ plone_install_dir }}/etc'
        - '{{ plone_install_dir }}/var/supervisor'
        - '{{ plone_install_dir }}/var/zeo'
        - '{{ plone_install_dir }}/var/filestorage'
        - '{{ plone_install_dir }}/var/blobstorage'
        - '{{ plone_install_dir }}/var/cache'
        - '{{ plone_install_dir }}/var/instance'
        - '{{ plone_install_dir }}/var/log'
        - '{{ plone_install_dir }}/parts/zeo'
        - '{{ plone_install_dir }}/parts/zeo/bin'
        - '{{ plone_install_dir }}/parts/zeo/etc'

    - name: 'Create the zeo configuration file'
      ansible.builtin.template:
        src: 'parts/zeo/etc/zeo.conf.j2'
        dest: '{{ plone_install_dir }}/parts/zeo/etc/zeo.conf'
        mode: '0600'

    - name: 'Create the runzeo file'
      ansible.builtin.template:
        src: 'parts/zeo/bin/runzeo.j2'
        dest: '{{ plone_install_dir }}/parts/zeo/bin/runzeo'
        mode: '0700'

    - name: 'Create the supervisor configuration file'
      ansible.builtin.template:
        src: 'etc/supervisord.conf.j2'
        dest: '{{ plone_install_dir }}/etc/supervisord.conf'
        mode: '0600'

    - name: 'Create the instance directory structure'
      ansible.builtin.file:
        path: '{{ item }}'
        state: directory
        mode: '0700'
      loop:
        - '{{ plone_install_dir }}/parts/instance/bin'
        - '{{ plone_install_dir }}/parts/instance/etc'
        - '{{ plone_install_dir }}/parts/instance/etc/package-includes'
        - '{{ plone_install_dir }}/parts/instance/var'

    - name: 'Load files through zcml'
      ansible.builtin.template:
        src: 'parts/instance/etc/package-includes/instance.zcml.j2'
        dest: "{{ plone_install_dir }}/parts/instance/etc/package-includes/{{ '1{:02}'.format(ansible_loop.index) }}-{{ item }}.zcml"
        mode: '0600'
      loop: '{{ plone_zcml | default([]) }}'
      loop_control:
        extended: true

    - name: 'Create the instance bin/interpreter file'
      ansible.builtin.template:
        src: 'parts/instance/bin/interpreter.j2'
        dest: '{{ plone_install_dir }}/parts/instance/bin/interpreter'
        mode: '0700'

    - name: 'Create the instance bin/instance file'
      ansible.builtin.template:
        src: 'bin/instance.j2'
        dest: '{{ plone_install_dir }}/bin/instance'
        mode: '0700'

    - name: 'Create the instance etc/site.zcml file'
      ansible.builtin.template:
        src: 'parts/instance/etc/site.zcml.j2'
        dest: '{{ plone_install_dir }}/parts/instance/etc/site.zcml'
        mode: '0600'

    - name: 'Create the instance etc/wsgi.ini file'
      ansible.builtin.template:
        src: 'parts/instance/etc/wsgi.ini.j2'
        dest: '{{ plone_install_dir }}/parts/instance/etc/wsgi.ini'
        mode: '0600'

    - name: 'Create the instance etc/zope.conf file'
      ansible.builtin.template:
        src: 'parts/instance/etc/zope.conf.j2'
        dest: '{{ plone_install_dir }}/parts/instance/etc/zope.conf'
        mode: '0600'
